#
# Default settings for the simulation
#

#User Setting
#dijsktra;
userSetting.routerMode = 1
#simpleConnectivity;
#userSetting.routerMode = 2
#userSetting.hostsMode = cluster
userSetting.hostsMode = normal
userSetting.nrofPlane = 6
userSetting.nrofMEO = 3

# Define 6 different node groups
Scenario.nrofHostGroups = 1

## Scenario settings
Scenario.name = satellite network simulation
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 6018.2
#Scenario.endTime = 100

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
#Interface.type = SimpleSatelliteInterface
Interface.type = ContactGraphInterface
# Transmit speed of 2 Mbps = 250kBps
Interface.transmitSpeed = 100k
#注意：ONE中距离单位是meters
#由于JAT中距离单位为km，因此我们将ONE中的距离单位统一视为km，这样只会在自带的图形界面单位上产生误解，但内部程序的逻辑上没有问题
Interface.transmitRange = 3000



## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
#Group.movementModel = PredictableMovement自己创建的新运动模型，里面函数暂时均没有调用
Group.movementModel =  SatelliteMovement
#Group.movementModel =  StationaryMovement
#Group.nodeLocation=[0,3000; 0,2000]


#1 random, 2, FIFO
Group.sendQueue = 1

#router路由自己创建
#Group.router = FirstContactRouter
#Group.router = DirectDeliveryRouter
#Group.router = EpidemicRouter
#Group.router = ShortestDistanceSpaceRouter
#Group.router = TwoLayerRouterBasedonGridRouter
#Group.router = GridRouter
#Group.router = DijsktraSearchBasedonTemporalGraph
#Group.router = SPNR
#Group.router = SPNRmodify
Group.router = CGR
Group.router.CGR.LinkDurationTimesOfUpdateInterval = 100
Group.layer = 3
Group.Pre_or_onlineOrbitCalculation = preOrbitCalculation
#Group.Pre_or_onlineOrbitCalculation = onlineOrbitCalculation
#Group.router = EASRRouter
#Group.router = ClusterRouterBasedonGridRouter
#Group.router = DijsktraRouter
#Group.msgPathLabel = true
Group.msgPathLabel = false
Group.bufferSize = 100M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = Interface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 30

#Group.nrofHosts = [10;20;30;40;50]
Group.nrofHosts = 150

# group1 (pedestrians) specific settings
Group1.groupID = Node



## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator

#Events1.class = MessageCreateEvent
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
#Events1.interval = 1,100
Events1.interval = 1,60
# Message sizes (500kB - 2MB)

#Events1.size = 100k,1M
Events1.size = 20k,20k
# range of message source/destination addresses
#Events1.hosts = [0,9;0,19;0,29;0,39;0,49]修改，注意hosts和tohosts包括下界但不包括上界，即[0, 9)
Events1.hosts = [0,150]

# Message ID prefix
Events1.prefix = M


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 15000, 15000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 4
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = MessageDelayReport
Report.report3 = MessageReport
Report.report4 = CreatedMessagesReport
Report.report5 = ContactTimesReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true


## Optimization settings -- these affect the speed of the simulation
## see World class for details.
#在world.java中的initSettings函数中读取
Optimization.cellSizeMult = 1
Optimization.randomizeUpdateOrder = true

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 104.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 30
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
